<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap2010:Annotation.AnnotationText="UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9" sap:VirtualizedContainerService.HintSize="660,2506" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:uasa="clr-namespace:UiPath.Activities.System.Arrays;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>UiPath.Core.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="670,2441" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="listCountriesPrint" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="listCountries" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message RPADev-S03P01-Lists-VB.Main.Begin;" sap:VirtualizedContainerService.HintSize="608,173" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;RPADev-S03P01-Lists-VB.Main.Begin;&quot;]" />
    <Sequence sap2010:Annotation.AnnotationText="Sort the List and Print 3 Values&#xA;&#xA;Given an input list of countries please sort the list and print the first 3 values in descending order.&#xA;&#xA;Note: Please use this value for the List initialization: new List(of String) from {&quot;Germany&quot;, &quot;Spain&quot;, &quot;Japan&quot;, &quot;Brazil&quot;, &quot;India&quot;, &quot;China&quot;}. Author Note: Additional countries were added.&#xA;&#xA;The list type is: System.Collections.Generic.List&lt;T&gt; with type = String" DisplayName="Sequence Initialization" sap:VirtualizedContainerService.HintSize="608,437" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign Initialization" sap:VirtualizedContainerService.HintSize="479,170" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[listCountries]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String) From {"Pakistan", "Micronesia", "Japan", "Mauritania", "Eswatini", "Liberia", "Antigua And Barbuda", "Burundi", "Ghana", "Greece", "Moldova", "Angola", "Nigeria", "Dominica", "Jamaica", "Malawi", "Turkey", "Canada", "Egypt", "Tuvalu", "Austrian Empire", "Belize", "Nicaragua", "Ukraine", "Hungary", "Trinidad And Tobago", "Venezuela", "Uzbekistan", "Bahrain", "Norway", "Indonesia", "Mozambique", "Georgia", "Holy See", "Republic Of The Congo", "Malta", "Denmark", "France", "Syria", "Cabo Verde", "Timor-leste", "Lesotho", "Armenia", "Lebanon", "Montenegro", "Mongolia", "Sudan", "Israel", "Vietnam", "Democratic Republic Of The Congo", "Andorra", "Benin", "India", "Paraguay", "Belarus", "Jordan", "Tajikistan", "Mexico", "Brazil", "Burma", "Qatar", "Italy", "The United Arab Emirates", "Iran", "Barbados", "Ethiopia", "Oman", "Bosnia And Herzegovina", "Serbia", "Croatia", "Bangladesh", "Switzerland", "Guinea-bissau", "Albania", "Libya", "Romania", "Uganda", "Turkmenistan", "Panama", "The Cayman Islands", "Korea", "Tunisia", "Guatemala", "Spain", "Thailand", "Senegal", "New Zealand", "Russia", "Algeria", "Chile", "Colombia", "Guinea", "Ireland", "Namibia", "Papua New Guinea", "Cambodia", "Portugal", "Kazakhstan", "Marshall Islands", "Burkina Faso", "Sierra Leone", "Zimbabwe", "Saint Lucia", "Lithuania", "South Africa", "South Sudan", "Liechtenstein", "Kiribati", "Botswana", "Mauritius", "Tanzania", "Czechia", "Belgium", "Yemen", "Brunswick And Lüneburg", "Iceland", "Poland", "Sao Tome And Principe", "Zambia", "Madagascar", "Estonia", "Guyana", "Ecuador", "El Salvador", "Malaysia", "Grenada", "Cyprus", "The United States Of America", "Tonga", "North Macedonia", "Peru", "Cote D’ivoire", "Uruguay", "The Gambia", "Afghanistan", "Kuwait", "Niger", "Sri Lanka", "Saint Vincent And The Grenadines", "The Solomon Islands", "Dominican Republic", "Gabon", "Finland", "Kenya", "Maldives", "Fiji", "Saint Kitts And Nevis", "Azerbaijan", "Chad", "Djibouti", "Philippines", "Eritrea", "Brunei", "Slovakia", "Sweden", "Rwanda", "Australia", "Costa Rica", "Iraq", "Kosovo", "Honduras", "Somalia", "Republic Of Korea", "Kyrgyzstan", "Palau", "Togo", "Suriname", "Luxembourg", "China", "The United Kingdom", "Laos", "Samoa", "The Congo Free State", "San Marino", "Cameroon", "Singapore", "The Netherlands", "Cuba", "Nauru", "Austria", "Mali", "Seychelles", "Slovenia", "Czechoslovakia", "Morocco", "Monaco", "Bolivia", "Saudi Arabia", "Nepal", "Germany", "Latvia", "Comoros", "Haiti", "Argentina", "Equatorial Guinea", "Vanuatu", "Central African Republic", "The Bahamas", "Bulgaria"}]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[listCountriesPrint]</OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
    </Sequence>
    <Sequence DisplayName="Sequence Operation" sap:VirtualizedContainerService.HintSize="608,1287" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="intCount" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <InvokeMethod DisplayName="Invoke Method Sort" sap:VirtualizedContainerService.HintSize="546,176" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Sort">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="scg:List(x:String)">[listCountries]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <InvokeMethod DisplayName="Invoke Method Reverse" sap:VirtualizedContainerService.HintSize="546,176" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Reverse">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="scg:List(x:String)">[listCountries]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[intCount]" DisplayName="For Each Country" sap:VirtualizedContainerService.HintSize="546,807" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[listCountries]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body Validate Country Count" sap:VirtualizedContainerService.HintSize="512,620" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[intCount &lt; 3]" DisplayName="If Validate Country Count" sap:VirtualizedContainerService.HintSize="450,535" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Then>
                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,241" sap2010:WorkflowViewState.IdRef="Sequence_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <uasa:AppendItemToList x:TypeArguments="x:String" ItemIndex="{x:Null}" DisplayName="Append Item to List Country Print" sap:VirtualizedContainerService.HintSize="354,156" sap2010:WorkflowViewState.IdRef="AppendItemToList`1_1" ItemToAppend="[currentText]" List="[listCountriesPrint]" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,133" sap2010:WorkflowViewState.IdRef="Sequence_7">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Break DisplayName="Break Country Loop" sap:VirtualizedContainerService.HintSize="354,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
    <Sequence DisplayName="Sequence Result" sap:VirtualizedContainerService.HintSize="608,292" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message RPADev-S03P01-Lists-VB.Main.Print;" sap:VirtualizedContainerService.HintSize="388,164" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;RPADev-S03P01-Lists-VB.Main.Print;&quot; + Environment.NewLine + String.Join(Environment.NewLine, listCountriesPrint)]" />
    </Sequence>
    <ui:LogMessage DisplayName="Log Message RPADev-S03P01-Lists-VB.Main.End;" sap:VirtualizedContainerService.HintSize="608,164" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;RPADev-S03P01-Lists-VB.Main.End;&quot;]" />
  </Sequence>
</Activity>